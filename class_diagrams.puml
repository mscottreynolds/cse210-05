@startuml Common-Classes

class TerminalServices

class VideoServices

class Color {
    _r: Red
    _g: Green
    _b: Blue
}

class Point {
    _x: x position on the screen.
    _y: y position on the screen.
}

class Director {
    _cast: Collection of all actors.
    _keyboard: Keyboard services.
    _video: Video services.

    start_game(): Starts the game.
}

@enduml



@startuml Actor-Class

class Actor {
    _text: Displayable text representation.
    _font_size: Size of this actor.
    _color: Color of the actor.
    _position: Current position of actor on the screen.
    _velocity: How fast the actor is moving.

    move_actor(dx, dy): Move the actor in the specified directions.
}
note top: "Base class for items drawn on screen."

class Banner {
}
Actor <|-- Banner

class Score {
    _score: Players score.
}
Actor <|-- Score

class Cycle {
    _tail: List of Points defining tail.
    _head: The head of the tail.
}
Actor <|-- Cycle

class Player {
    _score: This players score
    _cycle: The cycle for this player.
}
Actor <|-- Player

class Cast {
    add_actor(group, actor): Adds an actor to the given group.
    get_actors(group): Gets the actors in the given group.
    get_all_actors(): Gets all of the actors in the cast.
    get_first_actor(group): Gets the first actor in the given group.
    remove_actor(group, actor): Removes an actor from the given group.
}
note top: Collection of actors that are drawn on the screen.

@enduml




@startuml Action-Class

class Action {
    execute_action(): Execute the action.
}
note top: Base class for game actions.

class ControlActorsAction
Action  <|-- ControlActorsAction
Action <|-- MoveActorsAction
Action <|-- HandleCollisionsAction
Action <|-- DrawActorsAction

class Script {
    add_action(group, action)
    get_action(group)
    remove_action(group, action)
}
note top: Collection of actions the game executes.

@enduml
